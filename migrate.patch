diff --git a/dist/entity/User.js b/dist/entity/User.js
index 3c7a487..2498718 100644
--- a/dist/entity/User.js
+++ b/dist/entity/User.js
@@ -27,8 +27,6 @@ var _typeorm = require("typeorm");
 
 var _index = require("typeorm/index");
 
-var _getDatebaseConnection = require("../../lib/getDatebaseConnection");
-
 var _md = _interopRequireDefault(require("md5"));
 
 var _lodash = _interopRequireDefault(require("lodash"));
@@ -58,28 +56,16 @@ var User = (_dec = (0, _typeorm.Entity)('users'), _dec2 = (0, _index.PrimaryGene
     key: "validate",
     value: function () {
       var _validate = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
-        var found;
         return _regenerator["default"].wrap(function _callee$(_context) {
           while (1) {
             switch (_context.prev = _context.next) {
               case 0:
-                _context.next = 2;
-                return (0, _getDatebaseConnection.getDatabaseConnection)();
-
-              case 2:
-                _context.next = 4;
-                return _context.sent.manager.find(User, {
-                  username: this.username
-                });
-
-              case 4:
-                found = _context.sent;
-
-                if (found.length > 0) {
-                  // 没找到时 found 是个空数组
-                  this.errors.username.push('用户名已存在，不能重复注册');
-                }
-
+                // const found = await (await getDatabaseConnection()).manager.find(
+                //   User, {username: this.username}
+                // );
+                // if (found.length > 0) {    // 没找到时 found 是个空数组
+                //   this.errors.username.push('用户名已存在，不能重复注册');
+                // }
                 if (this.username.trim() === '') {
                   this.errors.username.push('用户名不能为空');
                 }
@@ -112,7 +98,7 @@ var User = (_dec = (0, _typeorm.Entity)('users'), _dec2 = (0, _index.PrimaryGene
                   this.errors.passwordConfirmation.push('密码不匹配');
                 }
 
-              case 14:
+              case 8:
               case "end":
                 return _context.stop();
             }
diff --git a/src/entity/User.ts b/src/entity/User.ts
index 44c03bd..1ce25a4 100644
--- a/src/entity/User.ts
+++ b/src/entity/User.ts
@@ -9,7 +9,7 @@ import {
 } from 'typeorm/index';
 import {Comment} from './Comment';
 import {Post} from './Post';
-import {getDatabaseConnection} from '../../lib/getDatebaseConnection';
+// import {getDatabaseConnection} from '../../lib/getDatebaseConnection';
 import md5 from 'md5';
 import _ from 'lodash'
 
@@ -41,12 +41,12 @@ export class User {
   passwordConfirmation: string;
 
   async validate() {
-    const found = await (await getDatabaseConnection()).manager.find(
-      User, {username: this.username}
-    );
-    if (found.length > 0) {    // 没找到时 found 是个空数组
-      this.errors.username.push('用户名已存在，不能重复注册');
-    }
+    // const found = await (await getDatabaseConnection()).manager.find(
+    //   User, {username: this.username}
+    // );
+    // if (found.length > 0) {    // 没找到时 found 是个空数组
+    //   this.errors.username.push('用户名已存在，不能重复注册');
+    // }
     if (this.username.trim() === '') {
       this.errors.username.push('用户名不能为空');
     }
